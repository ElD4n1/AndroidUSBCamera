apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

import org.apache.tools.ant.taskdefs.condition.Os

android {
	compileSdkVersion 31
//	buildToolsVersion rootProject.ext.versionBuildTool
//
//	compileOptions {
//		sourceCompatibility rootProject.ext.javaSourceCompatibility
//		targetCompatibility rootProject.ext.javaTargetCompatibility
//	}

    defaultConfig {
        minSdkVersion 21
		targetSdkVersion 31
		externalNativeBuild {
			cmake {
				version "3.22.1"
			}
			ndk{
				abiFilters 'armeabi-v7a','arm64-v8a'
			}
		}
	}

	lintOptions {
		checkReleaseBuilds false
		// Or, if you prefer, you can continue to check for errors in release builds,
		// but continue the build even when errors are found:
		abortOnError false
		// The demo app does not have translations.
		disable 'MissingTranslation'
	}

    buildTypes {
        release {
            minifyEnabled false
			proguardFiles getDefaultProguardFile(
					'proguard-android-optimize.txt'),
					'proguard-rules.pro'
        }

		debug {
			externalNativeBuild {
				cmake {
					cppFlags += "-O0"
				}
			}
		}
    }

	publishing {
		singleVariant("release") {}
	}
	externalNativeBuild {
		ndkBuild {
			path file('src/main/jni/Android.mk')
		}
	}
}

//tasks.withType(JavaCompile) {
//	compileTask -> compileTask.dependsOn ndkBuild
//}
//
//String getNdkBuildPath() {
//	def ndkBuildingDir = System.getenv("NDK_HOME")
//	if (ndkBuildingDir==null || ndkBuildingDir.isEmpty()) {
//		Properties properties = new Properties()
//		properties.load(project.rootProject.file('local.properties').newDataInputStream())
//		ndkBuildingDir = properties.getProperty("ndk.dir")
//	}
//	def ndkBuildPath = ndkBuildingDir
//	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//		ndkBuildPath = ndkBuildingDir + '/ndk-build.cmd'
//	} else {
//		ndkBuildPath = ndkBuildingDir + '/ndk-build'
//	}
//	return ndkBuildPath
//}
//
//task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
//	println('executing ndkBuild')
//	def ndkBuildPath = getNdkBuildPath();
//	commandLine ndkBuildPath, '-j8', '-C', file('src/main').absolutePath, 'NDK_LIBS_OUT=./out'
//}
//
//task ndkClean(type: Exec, description: 'clean JNI libraries') {
//	println('executing ndkBuild clean')
//	def ndkBuildPath = getNdkBuildPath();
//	commandLine ndkBuildPath, 'clean', '-C', file('src/main').absolutePath, 'NDK_LIBS_OUT=./out'
//}
//
//clean.dependsOn 'ndkClean'

dependencies {
    implementation fileTree(dir: new File(buildDir, 'libs'), include: '*.jar')
	implementation "androidx.appcompat:appcompat:1.3.1"
	implementation 'com.elvishew:xlog:1.11.0'
	implementation project(path: ':libuvccommon')
}

//afterEvaluate {
//	publishing {
//		publications {
//			release(MavenPublication) {
//				from components.release
//				groupId 'com.eld4n1'
//				artifactId 'libuvc'
//				version rootProject.ext.versionNameString
//			}
//		}
//	}
//}